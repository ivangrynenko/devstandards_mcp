id,category,subcategory,title,description,severity,examples,references,tags,rationale,fix_guidance
DS_YAML_001,drupal_yaml,file_extension,Use .yml File Extension,Configuration files must use the .yml extension not .yaml.,high,"{""bad"": [""mymodule.settings.yaml"", ""config.yaml"", ""services.yaml""], ""good"": [""mymodule.settings.yml"", ""config.yml"", ""services.yml""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""file-extension""]","Drupal standardizes on .yml extension for consistency across all configuration files.","Rename all .yaml files to use .yml extension. Update any references in code or documentation."
DS_YAML_002,drupal_yaml,indentation,Use Two Spaces for Indentation,YAML files must use two spaces for indentation. Never use tabs.,critical,"{""bad"": [""services:\n    myservice:\n        class: MyClass"", ""services:\n\tmyservice:\n\t\tclass: MyClass""], ""good"": [""services:\n  myservice:\n    class: MyClass"", ""parameters:\n  my_param:\n    value: true""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards"", ""https://yaml.org/spec/""]","[""yaml"", ""indentation"", ""formatting""]","Consistent indentation is critical in YAML as it defines structure. Tabs can cause parsing errors and inconsistent display.","Configure your editor to use 2 spaces for YAML files. Replace all tabs with 2 spaces. Many editors have YAML-specific settings."
DS_YAML_003,drupal_yaml,naming_convention,Configuration Names Must Start with Extension Name,"Simple configuration object names must start with the extension name (module or theme machine name).",critical,"{""bad"": [""# Module: my_module\nname: my-module.settings\n"", ""# Module: mymodule\nname: module_settings\n"", ""# Module: example\nname: settings.example""], ""good"": [""# Module: mymodule\nname: mymodule.settings\n"", ""# Module: example\nname: example.configuration\n"", ""# Theme: mytheme\nname: mytheme.settings""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""naming"", ""module-name""]","This naming convention ensures configuration objects are properly namespaced and prevents conflicts between modules.","Ensure configuration name starts with exact module/theme machine name (no underscores/hyphens if not in machine name)."
DS_YAML_004,drupal_yaml,name_length,Configuration Name Length Limit,"Unique configuration names cannot exceed 250 characters total.",high,"{""bad"": [""name: mymodule.extremely_long_configuration_name_that_exceeds_the_maximum_allowed_length_for_drupal_configuration_objects_which_is_two_hundred_and_fifty_characters_and_this_name_is_definitely_way_too_long_and_will_cause_issues_when_trying_to_save_or_load_this_configuration""], ""good"": [""name: mymodule.settings"", ""name: mymodule.display.full"", ""name: mymodule.workflow.editorial.transitions""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""naming"", ""length-limit""]","Database and system limitations require configuration names to be under 250 characters to ensure proper storage and retrieval.","Keep configuration names concise and descriptive. Use abbreviations if necessary but maintain clarity."
DS_YAML_005,drupal_yaml,config_entity_naming,Configuration Entity Naming Format,"Configuration entity names must follow the format: (extension).(config_prefix).(suffix)",high,"{""bad"": [""name: image_style_large"", ""name: views-my-view"", ""name: node.book""], ""good"": [""name: image.style.large"", ""name: views.view.content"", ""name: node.type.book""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""entity"", ""naming""]","This format provides a clear hierarchy and namespace for configuration entities, making them easier to manage and identify.","Follow the pattern: extension.config_prefix.suffix. Check the entity type's annotation for the correct config_prefix."
DS_YAML_006,drupal_yaml,component_limits,Configuration Name Component Length Limits,"Extension names limited to 50 characters, config entity prefixes to 32 characters, suffixes to 150 characters.",medium,"{""bad"": [""name: this_is_an_extremely_long_module_name_that_exceeds_fifty_chars.config.name"", ""name: mymodule.this_config_prefix_is_way_too_long_exceeds_limit.name"", ""name: mymodule.config.this_suffix_is_ridiculously_long_and_exceeds_one_hundred_and_fifty_characters_which_is_the_maximum_allowed_for_configuration_entity_suffixes_in_drupal_so_this_will_fail""], ""good"": [""name: mymodule.settings.global"", ""name: views.view.article_listing"", ""name: field.field.node.article.body""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""naming"", ""length-limit""]","Component length limits ensure configuration names remain manageable and don't exceed database field constraints.","Keep extension names under 50 chars, config prefixes under 32 chars, and suffixes under 150 chars."
DS_YAML_007,drupal_yaml,yaml_syntax,Use Standard YAML Syntax,Configuration files must use valid YAML syntax following the YAML specification.,critical,"{""bad"": [""key: value: invalid"", ""- item\n  - nested: wrong indentation"", ""string: 'unclosed string""], ""good"": [""key: 'value: valid'"", ""- item\n  - nested: correct"", ""string: 'properly closed string'""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards"", ""https://yaml.org/spec/""]","[""yaml"", ""syntax"", ""validation""]","Invalid YAML syntax will cause parsing errors and prevent configuration from loading, potentially breaking the site.","Validate YAML syntax using online validators or IDE plugins. Quote strings containing special characters like colons."
DS_YAML_008,drupal_yaml,comments,Use Hash for Comments,"Comments in YAML files should use the hash (#) character.",low,"{""bad"": [""// This is not a YAML comment\nkey: value"", ""/* Also not a YAML comment */\nkey: value""], ""good"": [""# This is a proper YAML comment\nkey: value"", ""key: value  # Inline comment"", ""# Multi-line comment\n# continues here\nkey: value""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards"", ""https://yaml.org/spec/""]","[""yaml"", ""comments"", ""documentation""]","YAML only recognizes # as a comment character. Other comment styles will be treated as data and cause errors.","Use # for all comments in YAML files. Place at start of line or after a value with space before #."
DS_YAML_009,drupal_yaml,image_style_naming,Image Style Configuration Naming,"Image style configurations must follow the pattern: image.style.(machine_name)",medium,"{""bad"": [""name: image_style_thumbnail"", ""name: styles.image.thumbnail"", ""name: image.thumbnail""], ""good"": [""name: image.style.thumbnail"", ""name: image.style.large"", ""name: image.style.media_library""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""image-style"", ""naming""]","Consistent naming patterns make it easier to identify and manage image style configurations programmatically.","Use image.style. prefix followed by the machine name of your image style."
DS_YAML_010,drupal_yaml,view_naming,View Configuration Naming,"View configurations must follow the pattern: views.view.(machine_name)",medium,"{""bad"": [""name: view.content_listing"", ""name: views_content"", ""name: content_view""], ""good"": [""name: views.view.content"", ""name: views.view.article_listing"", ""name: views.view.user_admin_people""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""views"", ""naming""]","Consistent naming patterns ensure Views can be properly discovered and managed by the Views module.","Use views.view. prefix followed by the machine name of your view."
DS_YAML_011,drupal_yaml,node_type_naming,Node Type Configuration Naming,"Node type configurations must follow the pattern: node.type.(machine_name)",medium,"{""bad"": [""name: node_type_article"", ""name: content_type.article"", ""name: node.article""], ""good"": [""name: node.type.article"", ""name: node.type.page"", ""name: node.type.landing_page""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""node-type"", ""naming""]","Following the standard naming pattern ensures node types are properly recognized by the system.","Use node.type. prefix followed by the machine name of your content type."
DS_YAML_012,drupal_yaml,machine_names,Use Machine Names Consistently,"Use machine names consistently throughout configuration references.",high,"{""bad"": [""# Inconsistent references\ntype: 'Article'\nfield_type: article\nbundle: 'node_article'""], ""good"": [""# Consistent machine name\ntype: article\nfield_type: article\nbundle: article""]}","[""https://www.drupal.org/docs/develop/coding-standards/configuration-file-coding-standards""]","[""yaml"", ""configuration"", ""machine-name"", ""consistency""]","Inconsistent machine names can cause configuration mismatches and runtime errors. Machine names should be consistent across all references.","Use the same machine name format (typically lowercase with underscores) consistently across all configuration files."